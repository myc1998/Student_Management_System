<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page import="java.sql.*" %>
<%@ page import="com.myc.tools.*" 
         import="java.io.IOException"
         import ="java.io.PrintWriter"
         import = "javax.servlet.ServletException"
         import="javax.servlet.annotation.WebServlet"
         import ="javax.servlet.http.HttpServlet"
         import ="javax.servlet.http.HttpServletRequest"
         import ="javax.servlet.http.HttpServletResponse"
         import ="javax.servlet.http.HttpSession"        
 %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
	<%
	request.setCharacterEncoding("UTF-8");  //将相应收到的传值都转化为utf-8模式

	String number = request.getParameter("number");  // 定义一个变量number来获取从上一个页面获取来的值
	String password = request.getParameter("password");
	String code = request.getParameter("code");//-------------
	HttpSession session1 = request.getSession();
	String randStr = (String) session1.getAttribute("randStr");
	response.setCharacterEncoding("utf-8");
	PrintWriter out1 = response.getWriter();
	if(!code.equals(randStr)){
		out.println("验证码错误！");
	}
	String level= request.getParameter("level");
	Connection conn = null;
	PreparedStatement ps = null; //接口继承
	ResultSet rs = null;
	String sql = "select * from tb_student where stu_id = ?";   //定义sql语句
	String sql2="select * from tb_teacher where teacher_id = ?";
	String sql3="select * from managerment where admian_name = ?";
	boolean isLogin = false; 
	Student student = null;
	admian Admain=null; 
	teacher Teacher=null;

	System.out.printf("------1");
	System.out.printf(level); 
	try{
		conn = DButil.getDBConnection();
		if(level.equals("student")){
		ps = conn.prepareStatement(sql); //预处理？
		ps.setString(1,number );
		rs = ps.executeQuery();
		System.out.printf("------2");
		if(rs.next()){
			if(rs.getString("stu_password").equals(password)){  //判断从上一页面收到的密码值是否与数据库中的password相等
				System.out.printf("------3");
				student = new Student();
				student.setstu_id(number);
				student.setstu_name(rs.getString("stu_name"));
				student.setstu_sex(rs.getString("stu_sex"));
				student.setstu_age(rs.getInt("stu_age"));
				student.setstu_major(rs.getString("stu_major"));
				student.setstu_sdept(rs.getString("stu_sdept"));
				student.setstu_phone(rs.getString("stu_phone"));
				student.setstu_password(rs.getString("stu_password"));
				
				isLogin = true;
			}
		}
		}
			else if(level.equals("admain")){
				ps = conn.prepareStatement(sql3); //预处理？
				ps.setString(1,number );
				rs = ps.executeQuery();
				if(rs.next()){
				if(rs.getString("admian_password").equals(password)){
				Admain=new admian();
				Admain.setadmian_name(number);
				Admain.setadmian_password(rs.getString("admian_password"));
				isLogin = true;
			}
			}
			}
			else if(level.equals("teacher")){
				ps = conn.prepareStatement(sql2); //预处理？
				ps.setString(1,number );
				rs = ps.executeQuery();
				if(rs.next()){
				if(rs.getString("teacher_password").equals(password)){
				Teacher=new teacher();
				Teacher.setteacher_id(number);
				Teacher.setteacher_password(rs.getString("teacher_password"));
				isLogin = true;
			}
			}
		}
		
	
	}catch(Exception e){
		e.printStackTrace();
	}finally{
		DButil.closeResultSet(rs);
		DButil.closeStatement(ps);
		DButil.closeConnection(conn);
	}
	
	if(isLogin){
		if(level.equals("student")){
		session.setAttribute(Constance.SESSION_STU_INFO, student);
		
		response.sendRedirect("BMS_student.jsp");	
		} 
		else if(level.equals("teacher")){
			session.setAttribute(level,Teacher);
			response.sendRedirect("BMS_teacher.jsp");	
		}
		else if(level.equals("admain")){
			session.setAttribute(level,Admain);
			response.sendRedirect("BMS_admain.jsp");
		}
		
	}else{
		request.setAttribute("MSG", "用户名或者密码错误！");
		request.getRequestDispatcher("login.jsp").forward(request, response);
	}

%>
</body>
</html>